(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function r(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(e){if(e.ep)return;e.ep=!0;const n=r(e);fetch(e.href,n)}})();class p{round=0}class g{constructor(t){this.initialState=t}async simulate(t,r,o){if(o?.aborted)throw new d("Simulation aborted");let e=structuredClone(this.initialState);for(e.round=0,await r?.(e);t(e);){if(o?.aborted)throw new d("Simulation aborted");const n=this.update(e);n.round=e.round+1,e=n,await r?.(e)}return e}async simulateWithHistory(t,r,o){const e=[],n=async a=>{if(o?.aborted)throw new d("Simulation aborted");e.push(a),await r?.(a)};return await this.simulate(t,n,o),e}}class d extends Error{constructor(t="Aborted"){super(t),this.name="AbortError"}}class b extends p{attributes=[];confidence=0;constructor(t,r){super(),this.attributes=t,this.confidence=r}}class y extends g{constructor(t,r,o=Math.random){super(t),this.initialState=t,this.config=r,this.randomFn=o,this.validateConfig(r)}update(t){const r=structuredClone(t),o=r.confidence;return r.attributes.forEach(e=>{const n=this.selectRandomEvent(o,e);this.applyEvent(r,n,e.name)}),r}selectRandomEvent(t,r){const o=Math.round(t),e=l=>!((l.probabilities[o]||0)<=0||l.special==="REVERT"&&r.lastChange===null),n=this.config.events.filter(e),a=n.reduce((l,f)=>l+(f.probabilities[o]||0),0);if(a===0)throw new Error("No valid events available for selection");const s=this.randomFn()*a;let c=0;for(const l of n)if(c+=l.probabilities[o]||0,s<=c)return l;throw new Error("Failed to select an event")}getChangeSign(t){const r=Math.round(t.value),o=this.config.signProbabilities[r]??.5;return this.randomFn()<o?-1:1}clamp(t,r,o){return Math.max(r,Math.min(o,t))}applyEvent(t,r,o){const e=t.attributes.find(n=>n.name===o);if(!e)throw new Error(`Attribute ${o} not found`);switch(r.special){case"REVERT":e.lastChange!==null&&(e.value=this.clamp(e.value-e.lastChange,-3,3),e.lastChange=null);break;case"CHANGE":{let n=r.attributeChange*this.getChangeSign(e);e.value=this.clamp(e.value+n,-3,3),e.lastChange=n;break}}return t.confidence=this.clamp(t.confidence+r.confidenceChange,-3,3),t}validateConfig(t){const r=t.events.map(a=>a.name),o=new Set(r);if(r.length!==o.size)throw new Error("Duplicate event names found in configuration");const e=t.attributes,n=new Set(e);if(e.length!==n.size)throw new Error("Duplicate attribute names found in configuration");for(const a of Object.keys(t.signProbabilities)){const s=Number(a);if(!Number.isInteger(s)||s<-3||s>3)throw new Error(`Invalid signProbabilities key: ${a}. Must be integer between -3 and 3.`);const c=t.signProbabilities[s];if(typeof c!="number"||c<0||c>1)throw new Error(`Invalid signProbabilities value for ${a}: must be a number between 0 and 1.`)}for(const a of t.events)for(const s of Object.keys(a.probabilities)){const c=Number(s);if(!Number.isInteger(c)||c<-3||c>3)throw new Error(`Invalid probability key for event '${a.name}': ${s}. Must be integer between -3 and 3.`);const l=a.probabilities[c];if(typeof l!="number"||l<0)throw new Error(`Invalid probability value for event '${a.name}' at ${s}: must be a non-negative number.`)}}}async function w(){const i=await fetch("socModelConfig.json");if(!i.ok)throw new Error(`Failed to load config: ${i.statusText}`);return i.json()}function m(i,t){return`<td><input type="number" min="-3" max="3" step="0.01" id="${i}Init" value="${t}"></td>`}function v(i,t){const r=document.getElementById("initTableSoc")?.querySelector("thead"),o=document.getElementById("initTableSoc")?.querySelector("tbody");if(!(!r||!o)){{const e=document.createElement("tr");e.innerHTML=`<th>${i.confidenceLablel}</th>`,t.attributes.forEach(n=>{e.innerHTML+=`<th>${n.name}</th>`}),r.replaceChildren(),r.appendChild(e)}{const e=document.createElement("tr");e.innerHTML=m("confidence",t.confidence),t.attributes.forEach(n=>{console.log("attr:",n),e.innerHTML+=m(n.name,n.value)}),o.replaceChildren(),o.appendChild(e)}}}function E(i,t){const r=document.getElementById("resultTableSoc")?.querySelector("thead"),o=document.getElementById("resultTableSoc")?.querySelector("tbody");if(!(!r||!o)){{const e=document.createElement("tr");e.innerHTML=`<th>Round</th><th>${i.confidenceLablel}</th>`,t.attributes.forEach(n=>{e.innerHTML+=`<th>${n.name}</th>`}),r.replaceChildren(),r.appendChild(e)}o.replaceChildren()}}function h(i){return parseFloat(document.getElementById(`${i}Init`).value)}async function S(i){if(i.preventDefault(),!u){console.error("Config not loaded");return}const t=parseInt(document.getElementById("roundsSoc").value,10),r=new b(u.attributes.map(n=>({name:n,value:h(n),lastChange:null})),h("confidence")),o=document.getElementById("resultTableSoc")?.querySelector("tbody");if(!o||isNaN(t)){console.error("Invalid input values");return}o.replaceChildren(),await new y(r,u).simulateWithHistory(n=>n.round<t,async n=>{const a=document.createElement("tr");a.innerHTML=`<td>${n.round}</td><td>${n.confidence}</td>`,n.attributes.forEach(s=>{a.innerHTML+=`<td>${s.value.toFixed(2)}</td>`}),o.appendChild(a),await new Promise(s=>setTimeout(s,10))})}let u=null;try{u=await w(),console.log("Loaded config:",u)}catch(i){console.error("Error loading config:",i)}if(u){document.getElementById("roundsSoc")?.setAttribute("value","50");const i=new b(u.attributes.map((t,r)=>({name:t,value:3,lastChange:null})),3);v(u,i),E(u,i)}document.getElementById("paramFormSoc")?.addEventListener("submit",async function(i){S(i)});
